name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - homolog
      - feature/eks-v2

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set Docker image tag based on branch
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "IMAGE_TAG=latest" >> $GITHUB_ENV
        elif [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
          echo "IMAGE_TAG=homolog" >> $GITHUB_ENV
        fi

    - name: Set Docker repo Snackbar
      run: echo "DOCKER_REPO_SNACKBAR=snackbar" >> $GITHUB_ENV

    - name: Set Docker repo MONGODB
      run: echo "DOCKER_REPO_MONGODB=mongo-snackbar" >> $GITHUB_ENV
      

    - name: Build and push Snackbar Docker image
      run: |
        set -x
        cd backend
        docker buildx build --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPO_SNACKBAR }}:${{ env.IMAGE_TAG }} --push --no-cache .

    - name: Build and push MongoDB Docker image
      run: |
          set -x
          cd database
          docker buildx build --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPO_MONGODB }}:${{ env.IMAGE_TAG }} --push --no-cache .


    - name: Docker logout
      run: docker logout
